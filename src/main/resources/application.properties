# \u5B9A\u4E49\u8BBF\u95EE\u7AEF\u53E3
server.port=8181
# \u5B9A\u4E49\u8BBF\u95EE\u540D localhost:8181/shop
#server.servlet.context-path=/shop

# springboot \u6574\u5408 thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# \u914D\u7F6E springMVC\u8DEF\u5F84
spring.mvc.view.prefix=classpath:/templates/
spring.mvc.view.suffix=.html

# springboot \u6574\u5408mysql \u914D\u7F6E
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=zhanj201506@
spring.datasource.url=jdbc:mysql://193.112.71.80:3306/shop?allowMultiQueries=true&autoReconnect=true&characterEncoding=UTF-8
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# \u8BBF\u95EE\uFF1Ahttp://localhost:8181/druid/login.html
# dataSource Pool \u7684\u914D\u7F6E, \u914D\u7F6EDruid\u7684\u5176\u4ED6\u53C2\u6570\uFF0C\u4EE5\u4E0B\u914D\u7F6E\u5FC5\u987B\u589E\u52A0\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\u624D\u80FD\u6709\u6548
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
# exceptionSorter\uFF1A\u8FD9\u4E2A\u914D\u7F6E\u8981\u914D\u7F6E\u6210false\u3002\u5982\u679C\u914D\u6210true\u7684\u8BDD\uFF0C\u7B2C\u4E00\u6B21\u542F\u52A8\u6CA1\u95EE\u9898\uFF0C\u540E\u7EED\u6BCF\u542F\u52A8\u4E00\u6B21\u90FD\u62A5\u9519\u3002
#spring.datasource.exceptionSorter=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500


# springboot \u6574\u5408jps \u914D\u7F6E
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=mysql
# \u5F00\u542F\u9A7C\u5CF0\u547D\u540D\u6CD5
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# \u5F00\u542F\u61D2\u52A0\u8F7D
spring.jpa.open-in-view=true
